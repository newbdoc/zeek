// Generated by binpac_quickstart

#pragma once

#include "analyzer/protocol/tcp/TCP.h"
#include "ID.h"

namespace binpac { namespace MQTT { class MQTT_Conn; } }

namespace zeek::analyzer::mqtt {

class MQTT_Analyzer final : public zeek::analyzer::tcp::TCP_ApplicationAnalyzer {

public:
	MQTT_Analyzer(zeek::Connection* conn);
	~MQTT_Analyzer() override;

	void Done() override;
	void DeliverStream(int len, const u_char* data, bool orig) override;
	void Undelivered(uint64_t seq, int len, bool orig) override;
	void EndpointEOF(bool is_orig) override;

	static zeek::analyzer::Analyzer* InstantiateAnalyzer(zeek::Connection* conn)
		{ return new MQTT_Analyzer(conn); }

protected:
	binpac::MQTT::MQTT_Conn* interp;

};

} // namespace zeek::analyzer::mqtt

namespace analyzer::MQTT {

using MQTT_Analyzer [[deprecated("Remove in v4.1. Use zeek::analyzer::mqtt::MQTT_Analyzer.")]] = zeek::analyzer::mqtt::MQTT_Analyzer;

} // namespace analyzer::mqtt
